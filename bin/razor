#!/usr/bin/env ruby

require_relative "../lib/razor/cli"

include Razor::CLI::Format

parse = Razor::CLI::Parse.new(ARGV)
if parse.show_help?
  puts parse.help
  exit 0
end
begin
  object = parse.navigate.get_final_object
  final_arguments = parse.final_arguments

  if object.is_a? Razor::CLI::Siren::Action
    object = parse.navigate.execute_action(object, final_arguments)
  end

# Show the final entity
  if object.is_a?(Razor::CLI::Siren::Entity)
    puts "From #{parse.navigate.last_url}:\n\n#{format_entity object}\n\n"
  else
    raise "Can't handle #{object}"
  end
rescue Razor::CLI::NavigationError => e
  puts "Error: #{e}\n#{parse.help}\n\n"
rescue RestClient::Exception => e
  r = e.response
  puts "Error from doing #{r.args[:method].to_s.upcase} #{r.args[:url]}"
  puts e.message
  begin
    body = JSON::parse(r.body)
    if body["details"]
      puts body.delete("details")
      unless body.empty?
        puts format_document(body)
      end
    end
  rescue => e
    # Ignore errors here; our best efforts at telling the user more about
    # what happened has failed. Just dump the response
    puts r.body
  end
end
